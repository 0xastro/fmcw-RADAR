.TH "C:/Users/astro/workspace_v9_2/mrr_18xx_dss/dss_config_edma_util.c" 3 "Wed May 20 2020" "Version 1.0" "mmWaveFMCWRADAR" \" -*- nroff -*-
.ad l
.nh
.SH NAME
C:/Users/astro/workspace_v9_2/mrr_18xx_dss/dss_config_edma_util.c \- EDMA Configuration Utility API implementation\&.  

.SH SYNOPSIS
.br
.PP
\fC#include <xdc/runtime/System\&.h>\fP
.br
\fC#include <ti/drivers/edma/edma\&.h>\fP
.br
\fC#include 'dss_config_edma_util\&.h'\fP
.br

.SS "Macros"

.in +1c
.ti -1c
.RI "#define \fBMAX\fP(x,  y)   ((x) > (y) ? (x) : (y))"
.br
.in -1c
.SS "Functions"

.in +1c
.ti -1c
.RI "int32_t \fBEDMAutil_configType1\fP (EDMA_Handle handle, uint8_t *srcBuff, uint8_t *dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t aCount, uint16_t bCount, int16_t srcBIdx, int16_t dstBIdx, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"
.br
.ti -1c
.RI "int32_t \fBEDMAutil_configType2a\fP (EDMA_Handle handle, uint8_t *srcBuff, uint8_t *dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t sampleLenInBytes, uint16_t numRangeBins, uint8_t numTxAnt, uint8_t numRxAnt, uint16_t numDopplerBins, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"
.br
.ti -1c
.RI "int32_t \fBEDMAutil_configType2b\fP (EDMA_Handle handle, uint8_t *srcBuff, uint8_t *dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t sampleLenInBytes, uint16_t numRangeBins, uint8_t numTxAnt, uint8_t numRxAnt, uint16_t numDopplerBins, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"
.br
.ti -1c
.RI "int32_t \fBEDMAutil_configType3\fP (EDMA_Handle handle, uint8_t *srcBuff, uint8_t *dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t aCount, uint16_t bCount, int16_t srcBIdx, int16_t destBIdx, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"
.br
.ti -1c
.RI "int32_t \fBEDMAutil_triggerType3\fP (EDMA_Handle handle, uint8_t *srcBuff, uint8_t *dstBuff, uint8_t chId, uint8_t triggerEnabled)"
.br
.in -1c
.SH "Detailed Description"
.PP 
EDMA Configuration Utility API implementation\&. 


.PP
\fB\fP
.RS 4
NOTE: (C) Copyright 2018 Texas Instruments, Inc\&.
.RE
.PP
Redistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met:
.PP
Redistributions of source code must retain the above copyright notice, this list of conditions and the following disclaimer\&.
.PP
Redistributions in binary form must reproduce the above copyright notice, this list of conditions and the following disclaimer in the documentation and/or other materials provided with the distribution\&.
.PP
Neither the name of Texas Instruments Incorporated nor the names of its contributors may be used to endorse or promote products derived from this software without specific prior written permission\&.
.PP
THIS SOFTWARE IS PROVIDED BY THE COPYRIGHT HOLDERS AND CONTRIBUTORS 'AS IS' AND ANY EXPRESS OR IMPLIED WARRANTIES, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE ARE DISCLAIMED\&. IN NO EVENT SHALL THE COPYRIGHT OWNER OR CONTRIBUTORS BE LIABLE FOR ANY DIRECT, INDIRECT, INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING, BUT NOT LIMITED TO, PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA, OR PROFITS; OR BUSINESS INTERRUPTION) HOWEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, STRICT LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE USE OF THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE\&. 
.PP
Definition in file \fBdss_config_edma_util\&.c\fP\&.
.SH "Macro Definition Documentation"
.PP 
.SS "#define MAX(x, y)   ((x) > (y) ? (x) : (y))"

.PP
Definition at line 44 of file dss_config_edma_util\&.c\&.
.SH "Function Documentation"
.PP 
.SS "int32_t EDMAutil_configType1 (EDMA_Handle handle, uint8_t * srcBuff, uint8_t * dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t aCount, uint16_t bCount, int16_t srcBIdx, int16_t dstBIdx, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"

.PP
Definition at line 86 of file dss_config_edma_util\&.c\&.
.PP
Referenced by MmwDemo_dataPathConfigEdma()\&.
.SS "int32_t EDMAutil_configType2a (EDMA_Handle handle, uint8_t * srcBuff, uint8_t * dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t sampleLenInBytes, uint16_t numRangeBins, uint8_t numTxAnt, uint8_t numRxAnt, uint16_t numDopplerBins, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"

.PP
Definition at line 153 of file dss_config_edma_util\&.c\&.
.PP
Referenced by MmwDemo_dataPathConfigEdma()\&.
.SS "int32_t EDMAutil_configType2b (EDMA_Handle handle, uint8_t * srcBuff, uint8_t * dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t sampleLenInBytes, uint16_t numRangeBins, uint8_t numTxAnt, uint8_t numRxAnt, uint16_t numDopplerBins, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"

.PP
Definition at line 220 of file dss_config_edma_util\&.c\&.
.PP
References MAX\&.
.SS "int32_t EDMAutil_configType3 (EDMA_Handle handle, uint8_t * srcBuff, uint8_t * dstBuff, uint8_t chId, bool isEventTriggered, uint16_t shadowParamId, uint16_t aCount, uint16_t bCount, int16_t srcBIdx, int16_t destBIdx, uint8_t eventQueueId, EDMA_transferCompletionCallbackFxn_t transferCompletionCallbackFxn, uintptr_t transferCompletionCallbackFxnArg)"

.PP
Definition at line 297 of file dss_config_edma_util\&.c\&.
.PP
Referenced by MmwDemo_dataPathConfigEdma()\&.
.SS "int32_t EDMAutil_triggerType3 (EDMA_Handle handle, uint8_t * srcBuff, uint8_t * dstBuff, uint8_t chId, uint8_t triggerEnabled)"

.PP
Definition at line 364 of file dss_config_edma_util\&.c\&.
.PP
Referenced by MmwDemo_processChirp()\&.
.SH "Author"
.PP 
Generated automatically by Doxygen for mmWaveFMCWRADAR from the source code\&.
